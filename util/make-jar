#!/bin/bash
#Capture root app directory
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"

#clean
source "$DIR/util/clean"
#test
source "$DIR/util/build"

function error {
	echo "Error making jar, will now halt"
	exit 1
}

echo "Creating bin/"
#make output directory
mkdir -p "$DIR/bin"

#go to src dir
pushd "$DIR/src" > /dev/null

#create a manifest with a default Cli.class invocation
echo "Main-Class: app.Cli" > manifest-default-class.MF

#jar up project class files
echo "Placing app.jar in bin/"
jar cfm "../bin/app.jar" manifest-default-class.MF app/*.class || error

#make a temp folder to unzip into
temp_dir=$(mktemp -dt)

	pushd "$temp_dir" > /dev/null

	#get a list of dependency jars, don't include junit
	deps_list=$(echo "$DIR"/deps/{asg.cliche,neo4j}/*.jar)
	for uz in $deps_list
		#unzip those jars into our temp folder
		do unzip -o $uz > /dev/null || error
	done

	#get rid of this META-INF file since we need to overwrite it with our own
	rm -rf "$temp_dir"/META-INF || error 
	
	#Unzip our jar's contents as well
	unzip -o "$DIR"/bin/app.jar || error 

	#Zip everything, including our deps into "app-with-deps.jar"
	zip -r "$DIR"/bin/app-with-deps.jar * > /dev/null || error

	popd > /dev/null

#clean up temp directory
rm -rf "$temp_dir"

#remove default manifest
rm manifest-default-class.MF

#go-back to users directory
popd > /dev/null

echo "Successfully made app.jar, app-with-deps.jar!"
